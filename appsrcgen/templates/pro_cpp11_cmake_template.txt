
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)
PROJECT({{Repl:AppName}}_app CXX)

if(DEFINED ENV{NDDSHOME})
  set(NDDSHOME $ENV{NDDSHOME})
else()
  message(FATAL_ERROR "NDDSHOME (env var) is not set")
endif()

set(CMAKE_MODULE_PATH ${NDDSHOME}/resource/cmake)

cmake_policy(SET CMP0057 NEW)
find_package(RTIConnextDDS REQUIRED)

IF(DEFINED ENV{CONNEXTDDS_ARCH})
    SET(CONNEXTDDS_ARCH $ENV{CONNEXTDDS_ARCH})
ELSE()
    MESSAGE(FATAL_ERROR "CONNEXTDDS_ARCH (env var) is not set (this indicates the Connext build target type)")
ENDIF()

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../../build/${CONNEXTDDS_ARCH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../../build/${CONNEXTDDS_ARCH})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../../build/${CONNEXTDDS_ARCH})

SET(TYPEFILES_BASE_DIR {{Repl:TypeFilesBaseDir}})
SET(TYPEFILES_LIB_DEBUG_DIR ${TYPEFILES_BASE_DIR}{{Repl:TypeLibDebugPath}})
SET(TYPEFILES_LIB_RELEASE_DIR ${TYPEFILES_BASE_DIR}{{Repl:TypeLibReleasePath}})
SET(TYPEFILES_INCLUDE_DIR ${TYPEFILES_BASE_DIR}{{Repl:TypeHeaderIncludePath}})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${TYPEFILES_INCLUDE_DIR} ${CONNEXTDDS_INCLUDE_DIRS})
SET(SOURCE_EXTENSION cxx)

IF (${CMAKE_BUILD_TYPE} MATCHES "[Rr]elease")
    ADD_DEFINITIONS(-DNDEBUG)
    SET(AD_TYPES_LIB_PATH ${TYPEFILES_LIB_RELEASE_DIR})
    SET(AD_TYPES_LIBS "{{Repl:TypeLibReleaseName}}")
ELSE()
    SET(AD_TYPES_LIB_PATH ${TYPEFILES_LIB_DEBUG_DIR})
    SET(AD_TYPES_LIBS "{{Repl:TypeLibDebugName}}")
ENDIF()
LINK_DIRECTORIES(${AD_TYPES_LIB_PATH})

ADD_EXECUTABLE({{Repl:AppName}}
               ${CMAKE_CURRENT_SOURCE_DIR}/{{Repl:AppName}}_main.${SOURCE_EXTENSION}
               )
TARGET_LINK_LIBRARIES({{Repl:AppName}} PUBLIC  ${AD_TYPES_LIBS} RTIConnextDDS::cpp2_api)